From 2d4ba5b47410249691ce193bf9b2b8322612ecbb Mon Sep 17 00:00:00 2001
From: Valentin Raevsky <valentin@compulab.co.il>
Date: Wed, 12 Apr 2023 17:01:13 +0300
Subject: [PATCH] panel: small fixes

Signed-off-by: Valentin Raevsky <valentin@compulab.co.il>
---
 .../gpu/drm/panel/panel-startek-ili9881c.c    | 24 +++++++------------
 1 file changed, 9 insertions(+), 15 deletions(-)

diff --git a/drivers/gpu/drm/panel/panel-startek-ili9881c.c b/drivers/gpu/drm/panel/panel-startek-ili9881c.c
index d54d2148ea99..7d75dbd7cffb 100644
--- a/drivers/gpu/drm/panel/panel-startek-ili9881c.c
+++ b/drivers/gpu/drm/panel/panel-startek-ili9881c.c
@@ -446,10 +446,10 @@ static int ili9881c_prepare(struct drm_panel *panel)
 
     /* And reset it */
     gpio_set_value_cansleep(ctx->rst_gpio, 0);
-    msleep(120);
+    msleep(20);
 
     gpio_set_value_cansleep(ctx->rst_gpio, 1);
-    msleep(120);
+    msleep(20);
 
     ctx->prepared = true;
 
@@ -557,7 +557,6 @@ static int ili9881c_dsi_probe(struct mipi_dsi_device *dsi)
 {
     struct device_node *np;
     struct ili9881c *ctx;
-    int ret;
 	int lanes = 4;
 
     ctx = devm_kzalloc(&dsi->dev, sizeof(*ctx), GFP_KERNEL);
@@ -575,18 +574,13 @@ static int ili9881c_dsi_probe(struct mipi_dsi_device *dsi)
         return PTR_ERR(ctx->power);
     }
 
-    ctx->rst_gpio = of_get_named_gpio(dsi->dev.of_node, "reset-gpio", 0);
-    if (!gpio_is_valid(ctx->rst_gpio)) {
-        dev_err(&dsi->dev, "Couldn't get panel reset pin available 0\n");
-        return -EINVAL;
-    }
-
-    ret = devm_gpio_request_one(&dsi->dev, ctx->rst_gpio,
-                GPIOF_OUT_INIT_LOW, "ili_reset");
-
-    if (ret < 0) {
-        dev_err(&dsi->dev, "Couldn't get panel reset pin available 1\n");
-        return ret;
+    np = of_parse_phandle(dsi->dev.of_node, "reset-gpio", 0);
+    if (np) {
+        ctx->rst_gpio = of_get_named_gpio(dsi->dev.of_node, "reset-gpio", 0);
+        if (!gpio_is_valid(ctx->rst_gpio)) {
+            dev_notice(&dsi->dev, "Couldn't get panel reset pin available\n");
+            return -EPROBE_DEFER;
+        }
     }
 
     np = of_parse_phandle(dsi->dev.of_node, "backlight", 0);
-- 
2.17.1

