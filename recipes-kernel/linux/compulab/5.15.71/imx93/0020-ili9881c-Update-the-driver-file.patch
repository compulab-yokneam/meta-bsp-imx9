From ca6145f89057465852dda4d2590da4fd50746876 Mon Sep 17 00:00:00 2001
From: Valentin Raevsky <valentin@compulab.co.il>
Date: Sat, 22 Apr 2023 21:04:51 +0300
Subject: [PATCH] ili9881c: Update the driver file

Signed-off-by: Valentin Raevsky <valentin@compulab.co.il>
---
 .../gpu/drm/panel/panel-startek-ili9881c.c    | 80 +++++++++----------
 1 file changed, 40 insertions(+), 40 deletions(-)

diff --git a/drivers/gpu/drm/panel/panel-startek-ili9881c.c b/drivers/gpu/drm/panel/panel-startek-ili9881c.c
index 6baa21706d5a..56a1bfdc86c5 100644
--- a/drivers/gpu/drm/panel/panel-startek-ili9881c.c
+++ b/drivers/gpu/drm/panel/panel-startek-ili9881c.c
@@ -278,6 +278,9 @@ static const u32 ili_bus_formats[] = {
         MEDIA_BUS_FMT_RGB565_1X16,
 };
 
+static const u32 ili_bus_flags = DRM_BUS_FLAG_DE_LOW |
+				 DRM_BUS_FLAG_PIXDATA_DRIVE_NEGEDGE;
+
 static inline struct ili9881c *panel_to_ili9881c(struct drm_panel *panel)
 {
     return container_of(panel, struct ili9881c, panel);
@@ -503,49 +506,37 @@ static struct display_timing banana_timing = {
     .flags = DISPLAY_FLAGS_VSYNC_LOW | DISPLAY_FLAGS_HSYNC_LOW | DISPLAY_FLAGS_DE_LOW,
 };
 
+static struct drm_display_mode default_mode = {
+	.width_mm = 63,
+	.height_mm = 115,
+	.flags = DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC,
+};
 
 static int ili9881c_get_modes(struct drm_panel *panel,
-		struct drm_connector *connector)
+			       struct drm_connector *connector)
 {
-    struct ili9881c *ctx = panel_to_ili9881c(panel);
-    struct drm_display_mode *mode;
-    int ret;
-
-    const struct display_timing *dt = &banana_timing;
-    struct videomode vm;
-
-    videomode_from_timing(dt, &vm);
-    mode = drm_mode_create(connector->dev);
-    if (!mode) {
-        dev_err(&ctx->dsi->dev, "failed to add mode %dx%d\n",
-            dt->hactive.min, dt->vactive.min);
-        return -ENOMEM;
-    }
-    dev_notice(&ctx->dsi->dev, "timing: pixelclock: device tree clocks %d %d %d\n",
-            dt->pixelclock.min, dt->pixelclock.typ, dt->pixelclock.max);
-    dev_notice(&ctx->dsi->dev, "timing: hactive: device tree clocks %d %d %d\n",
-            dt->hactive.min, dt->hactive.typ, dt->hactive.max);
-    dev_notice(&ctx->dsi->dev, "timing: vactive: device tree clocks %d %d %d\n",
-            dt->vactive.min, dt->vactive.typ, dt->vactive.max);
-
-    drm_display_mode_from_videomode(&vm, mode);
-
-    drm_mode_set_name(mode);
-
-    connector->display_info.width_mm = 62;
-    connector->display_info.height_mm = 110;
-
-    dev_dbg(&ctx->dsi->dev, "calling bus format set function ili9881c\n");
-    connector->display_info.bus_flags = DRM_BUS_FLAG_DE_LOW | DRM_BUS_FLAG_PIXDATA_DRIVE_NEGEDGE;
-    ret = drm_display_info_set_bus_formats(&connector->display_info,
-                    ili_bus_formats, ARRAY_SIZE(ili_bus_formats));
-    if (ret)
-        return -EINVAL;
-
-    mode->type = DRM_MODE_TYPE_DRIVER | DRM_MODE_TYPE_PREFERRED;
-    drm_mode_probed_add(connector, mode);
-
-    return 1;
+	struct drm_display_mode *mode;
+
+	mode = drm_mode_duplicate(connector->dev, &default_mode);
+	if (!mode) {
+		dev_err(panel->dev, "failed to add mode %ux%u@%u\n",
+			default_mode.hdisplay, default_mode.vdisplay,
+			drm_mode_vrefresh(&default_mode));
+		return -ENOMEM;
+	}
+
+	drm_mode_set_name(mode);
+	mode->type = DRM_MODE_TYPE_DRIVER | DRM_MODE_TYPE_PREFERRED;
+	drm_mode_probed_add(connector, mode);
+
+	connector->display_info.width_mm = mode->width_mm;
+	connector->display_info.height_mm = mode->height_mm;
+	connector->display_info.bus_flags = ili_bus_flags;
+
+	drm_display_info_set_bus_formats(&connector->display_info,
+					 ili_bus_formats,
+					 ARRAY_SIZE(ili_bus_formats));
+	return 1;
 }
 
 static const struct drm_panel_funcs ili9881c_funcs = {
@@ -556,6 +547,13 @@ static const struct drm_panel_funcs ili9881c_funcs = {
     .get_modes	= ili9881c_get_modes,
 };
 
+static void ili9881c_dt_to_drm(struct display_timing *dt, struct drm_display_mode *mode)
+{
+    struct videomode vm;
+    videomode_from_timing(dt, &vm);
+    drm_display_mode_from_videomode(&vm, mode);
+}
+
 static int ili9881c_dsi_probe(struct mipi_dsi_device *dsi)
 {
     struct device_node *np;
@@ -608,6 +606,8 @@ static int ili9881c_dsi_probe(struct mipi_dsi_device *dsi)
     dsi->format = MIPI_DSI_FMT_RGB888;
     dsi->lanes = lanes;
 
+    ili9881c_dt_to_drm(&banana_timing,&default_mode);
+
     return mipi_dsi_attach(dsi);
 }
 
-- 
2.17.1

